plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.pdf_uygulamasi_eng"
    compileSdk = localProperties.getProperty("flutter.compileSdkVersion", "33").toInteger()
    ndkVersion = localProperties.getProperty("flutter.ndkVersion", "23.1.7779620")

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.pdf_uygulamasi_eng"
        minSdk = localProperties.getProperty("flutter.minSdkVersion", "21").toInteger()
        targetSdk = localProperties.getProperty("flutter.targetSdkVersion", "33").toInteger()
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Imzalama yapılandırması, kendine ait bir release key'in varsa buraya ekleyebilirsin.
            signingConfig = signingConfigs.debug
            // Eğer projen release build'de minify edilmemişse aşağıdaki satırı kullanabilirsin:
            // minifyEnabled false
        }
    }
}

flutter {
    source = "../.."
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = "../build"
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(":app")
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
